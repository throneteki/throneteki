# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build, test and package
on:
    push:
        branches: ['master', 'development-*', 'playtesting']
        paths-ignore:
            - '.github/workflows/**'
    pull_request:
        branches: ['master', 'development-*', 'playtesting']
        paths-ignore:
            - '.github/workflows/**'
jobs:
    build:
        name: Build & Test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x, 22.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        steps:
            - name: Checkout source and submodules
              uses: actions/checkout@v4
              with:
                  fetch-depth: '0'
                  submodules: recursive
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
            - run: npm ci
            - run: npm run lint
            - run: npm test
    package:
        name: Push Package
        if: ${{ github.repository == vars.PACKAGEABLE_REPOSITORY && (github.ref_name == 'master' || github.ref_name == 'playtesting') && github.event_name == 'push' }}
        runs-on: ubuntu-latest
        needs: 'build'
        steps:
            - name: Checkout source and submodules
              uses: actions/checkout@v4
              with:
                  fetch-depth: '0'
                  submodules: recursive
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v0.9.14
              with:
                  versionSpec: 5.x
            - id: determine_version
              name: Determine Version
              uses: gittools/actions/gitversion/execute@v0.9.14
              with:
                  additionalArguments: /overrideconfig mode=Mainline
            - name: Build and push lobby
              uses: docker/build-push-action@v3
              with:
                  build-args: |
                      "VERSION=${{ steps.determine_version.outputs.semVer }}"
                      "SENTRY_KEY=${{ secrets.SENTRY_DSN }}"
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/throneteki-lobby:latest, ${{ secrets.DOCKERHUB_USERNAME }}/throneteki-lobby:${{ steps.determine_version.outputs.semVer }}
            - name: Build and push node
              uses: docker/build-push-action@v3
              with:
                  build-args: |
                      "VERSION=${{ steps.determine_version.outputs.semVer }}"
                  push: true
                  file: server/gamenode/Dockerfile
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/throneteki-node:latest, ${{ secrets.DOCKERHUB_USERNAME }}/throneteki-node:${{ steps.determine_version.outputs.semVer }}
