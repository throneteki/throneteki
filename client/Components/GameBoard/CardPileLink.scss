@import '../../mixins';

.dead-pile,
.plots,
.plot-deck,
.usedPlots,
.used-plots,
.revealed-plots {
    .card-list-popup {
        @include calculate-tiled-card-prop(width, 4, height);
        @include calculate-tiled-card-prop(height, 2, width);

        .inner {
            @include calculate-tiled-card-prop(width, 4, height);
            @include calculate-tiled-card-prop(height, 2, width);
        }
    }
}

.agenda {
    .card-list-popup {
        @include calculate-tiled-card-prop(width, 2, width);

        .inner {
            @include calculate-tiled-card-prop(width, 2, width);
            @include calculate-tiled-card-prop(height, 1, height);
        }
    }
}

.draw-deck {
    .card-list-popup {
        @include calculate-tiled-card-prop(width, 7, width);
        @include calculate-tiled-card-prop(height, 4, height + 40px);

        .inner {
            @include calculate-tiled-card-prop(width, 7, width);
            @include calculate-tiled-card-prop(height, 4, height);
        }
    }
}

.discard,
.discard-pile {
    .card-list-popup {
        @include calculate-tiled-card-prop(width, 5, width);
        @include calculate-tiled-card-prop(height, 2, height);

        .inner {
            @include calculate-tiled-card-prop(width, 5, width);
            @include calculate-tiled-card-prop(height, 2, height);
        }
    }
}

.additional-cards {
    .panel {
        .inner {
            @include calculate-tiled-card-prop(min-width, 2, height);
        }
    }
}

// .hand {
//     z-index: 20;
//     @include calculate-tiled-card-prop(width, 6, width, var(--scrollbar-width) + 10px);
//     @include calculate-tiled-card-prop(height, 1, height);

//     .inner {
//         @include calculate-tiled-card-prop(width, 6, width, var(--scrollbar-width));
//     }
// }
